#ifndef INSTRUCTH
#define INSTRUCTH
#include "jvm.h"


void load_instructions( void (*op_func[256])(Jvm *, frame*, classcode*) );

void func_nop(Jvm *, frame*, classcode*);
void func_aconst_null(Jvm *, frame*, classcode*);
void func_iconst_m1(Jvm *, frame*, classcode*);
void func_iconst_0(Jvm *, frame*, classcode*);
void func_iconst_1(Jvm *, frame*, classcode*);
void func_iconst_2(Jvm *, frame*, classcode*);
void func_iconst_3(Jvm *, frame*, classcode*);
void func_iconst_4(Jvm *, frame*, classcode*);
void func_iconst_5(Jvm *, frame*, classcode*);
void func_lconst_0(Jvm *, frame*, classcode*);
void func_lconst_1(Jvm *, frame*, classcode*);
void func_fconst_0(Jvm *, frame*, classcode*);
void func_fconst_1(Jvm *, frame*, classcode*);
void func_fconst_2(Jvm *, frame*, classcode*);
void func_dconst_0(Jvm *, frame*, classcode*);
void func_dconst_1(Jvm *, frame*, classcode*);
void func_bipush(Jvm *, frame*, classcode*);
void func_sipush(Jvm *, frame*, classcode*);
void func_ldc(Jvm *, frame*, classcode*);
void func_ldc_w(Jvm *, frame*, classcode*);
void func_ldc2_w(Jvm *, frame*, classcode*);
void func_iload(Jvm *, frame*, classcode*);
void func_lload(Jvm *, frame*, classcode*);
void func_fload(Jvm *, frame*, classcode*);
void func_dload(Jvm *, frame*, classcode*);
void func_aload(Jvm *, frame*, classcode*);
void func_iload_0(Jvm *, frame*, classcode*);
void func_iload_1(Jvm *, frame*, classcode*);
void func_iload_2(Jvm *, frame*, classcode*);
void func_iload_3(Jvm *, frame*, classcode*);
void func_lload_0(Jvm *, frame*, classcode*);
void func_lload_1(Jvm *, frame*, classcode*);
void func_lload_2(Jvm *, frame*, classcode*);
void func_lload_3(Jvm *, frame*, classcode*);
void func_fload_0(Jvm *, frame*, classcode*);
void func_fload_1(Jvm *, frame*, classcode*);
void func_fload_2(Jvm *, frame*, classcode*);
void func_fload_3(Jvm *, frame*, classcode*);
void func_dload_0(Jvm *, frame*, classcode*);
void func_dload_1(Jvm *, frame*, classcode*);
void func_dload_2(Jvm *, frame*, classcode*);
void func_dload_3(Jvm *, frame*, classcode*);
void func_aload_0(Jvm *, frame*, classcode*);
void func_aload_1(Jvm *, frame*, classcode*);
void func_aload_2(Jvm *, frame*, classcode*);
void func_aload_3(Jvm *, frame*, classcode*);
void func_iaload(Jvm *, frame*, classcode*);
void func_laload(Jvm *, frame*, classcode*);
void func_faload(Jvm *, frame*, classcode*);
void func_daload(Jvm *, frame*, classcode*);
void func_aaload(Jvm *, frame*, classcode*);
void func_baload(Jvm *, frame*, classcode*);
void func_caload(Jvm *, frame*, classcode*);
void func_saload(Jvm *, frame*, classcode*);
void func_istore(Jvm *, frame*, classcode*);
void func_lstore(Jvm *, frame*, classcode*);
void func_fstore(Jvm *, frame*, classcode*);
void func_dstore(Jvm *, frame*, classcode*);
void func_astore(Jvm *, frame*, classcode*);
void func_istore_0(Jvm *, frame*, classcode*);
void func_istore_1(Jvm *, frame*, classcode*);
void func_istore_2(Jvm *, frame*, classcode*);
void func_istore_3(Jvm *, frame*, classcode*);
void func_lstore_0(Jvm *, frame*, classcode*);
void func_lstore_1(Jvm *, frame*, classcode*);
void func_lstore_2(Jvm *, frame*, classcode*);
void func_lstore_3(Jvm *, frame*, classcode*);
void func_fstore_0(Jvm *, frame*, classcode*);
void func_fstore_1(Jvm *, frame*, classcode*);
void func_fstore_2(Jvm *, frame*, classcode*);
void func_fstore_3(Jvm *, frame*, classcode*);
void func_dstore_0(Jvm *, frame*, classcode*);
void func_dstore_1(Jvm *, frame*, classcode*);
void func_dstore_2(Jvm *, frame*, classcode*);
void func_dstore_3(Jvm *, frame*, classcode*);
void func_astore_0(Jvm *, frame*, classcode*);
void func_astore_1(Jvm *, frame*, classcode*);
void func_astore_2(Jvm *, frame*, classcode*);
void func_astore_3(Jvm *, frame*, classcode*);
void func_iastore(Jvm *, frame*, classcode*);
void func_lastore(Jvm *, frame*, classcode*);
void func_fastore(Jvm *, frame*, classcode*);
void func_dastore(Jvm *, frame*, classcode*);
void func_aastore(Jvm *, frame*, classcode*);
void func_bastore(Jvm *, frame*, classcode*);
void func_castore(Jvm *, frame*, classcode*);
void func_sastore(Jvm *, frame*, classcode*);
void func_pop(Jvm *, frame*, classcode*);
void func_pop2(Jvm *, frame*, classcode*);
void func_dup(Jvm *, frame*, classcode*);
void func_dup_x1(Jvm *, frame*, classcode*);
void func_dup_x2(Jvm *, frame*, classcode*);
void func_dup2(Jvm *, frame*, classcode*);
void func_dup2_x1(Jvm *, frame*, classcode*);
void func_dup2_x2(Jvm *, frame*, classcode*);
void func_swap(Jvm *, frame*, classcode*);
void func_iadd(Jvm *, frame*, classcode*);
void func_ladd(Jvm *, frame*, classcode*);
void func_fadd(Jvm *, frame*, classcode*);
void func_dadd(Jvm *, frame*, classcode*);
void func_isub(Jvm *, frame*, classcode*);
void func_lsub(Jvm *, frame*, classcode*);
void func_fsub(Jvm *, frame*, classcode*);
void func_dsub(Jvm *, frame*, classcode*);
void func_imul(Jvm *, frame*, classcode*);
void func_lmul(Jvm *, frame*, classcode*);
void func_fmul(Jvm *, frame*, classcode*);
void func_dmul(Jvm *, frame*, classcode*);
void func_idiv(Jvm *, frame*, classcode*);
void func_inst_ldiv(Jvm *, frame*, classcode*);
void func_fdiv(Jvm *, frame*, classcode*);
void func_ddiv(Jvm *, frame*, classcode*);
void func_irem(Jvm *, frame*, classcode*);
void func_lrem(Jvm *, frame*, classcode*);
void func_frem(Jvm *, frame*, classcode*);
void func_inst_drem(Jvm *, frame*, classcode*);
void func__drem(Jvm *, frame*, classcode*);
void func_ineg(Jvm *, frame*, classcode*);
void func_lneg(Jvm *, frame*, classcode*);
void func_fneg(Jvm *, frame*, classcode*);
void func_dneg(Jvm *, frame*, classcode*);
void func_ishl(Jvm *, frame*, classcode*);
void func_lshl(Jvm *, frame*, classcode*);
void func_ishr(Jvm *, frame*, classcode*);
void func_lshr(Jvm *, frame*, classcode*);
void func_iushr(Jvm *, frame*, classcode*);
void func_lushr(Jvm *, frame*, classcode*);
void func_iand(Jvm *, frame*, classcode*);
void func_land(Jvm *, frame*, classcode*);
void func_ior(Jvm *, frame*, classcode*);
void func_lor(Jvm *, frame*, classcode*);
void func_ixor(Jvm *, frame*, classcode*);
void func_lxor(Jvm *, frame*, classcode*);
void func_iinc(Jvm *, frame*, classcode*);
void func_i2l(Jvm *, frame*, classcode*);
void func_i2f(Jvm *, frame*, classcode*);
void func_i2d(Jvm *, frame*, classcode*);
void func_l2i(Jvm *, frame*, classcode*);
void func_l2f(Jvm *, frame*, classcode*);
void func_l2d(Jvm *, frame*, classcode*);
void func_f2i(Jvm *, frame*, classcode*);
void func_f2l(Jvm *, frame*, classcode*);
void func_f2d(Jvm *, frame*, classcode*);
void func_d2i(Jvm *, frame*, classcode*);
void func_d2l(Jvm *, frame*, classcode*);
void func_d2f(Jvm *, frame*, classcode*);
void func_i2b(Jvm *, frame*, classcode*);
void func_i2c(Jvm *, frame*, classcode*);
void func_i2s(Jvm *, frame*, classcode*);
void func_lcmp(Jvm *, frame*, classcode*);
void func_fcmpl(Jvm *, frame*, classcode*);
void func_fcmpg(Jvm *, frame*, classcode*);
void func_dcmpl(Jvm *, frame*, classcode*);
void func_dcmpg(Jvm *, frame*, classcode*);
void func_ifeq(Jvm *, frame*, classcode*);
void func_ifne(Jvm *, frame*, classcode*);
void func_iflt(Jvm *, frame*, classcode*);
void func_ifge(Jvm *, frame*, classcode*);
void func_ifgt(Jvm *, frame*, classcode*);
void func_ifle(Jvm *, frame*, classcode*);
void func_if_icmpeq(Jvm *, frame*, classcode*);
void func_if_icmpne(Jvm *, frame*, classcode*);
void func_if_icmplt(Jvm *, frame*, classcode*);
void func_if_icmpge(Jvm *, frame*, classcode*);
void func_if_icmpgt(Jvm *, frame*, classcode*);
void func_if_icmple(Jvm *, frame*, classcode*);
void func_if_acmpeq(Jvm *, frame*, classcode*);
void func_if_acmpne(Jvm *, frame*, classcode*);
void func_inst_goto(Jvm *, frame*, classcode*);
void func_jsr(Jvm *, frame*, classcode*);
void func_ret(Jvm *, frame*, classcode*);
void func_tableswitch(Jvm *, frame*, classcode*);
void func_lookupswitch(Jvm *, frame*, classcode*);
void func_ireturn(Jvm *, frame*, classcode*);
void func_lreturn(Jvm *, frame*, classcode*);
void func_freturn(Jvm *, frame*, classcode*);
void func_dreturn(Jvm *, frame*, classcode*);
void func_areturn(Jvm *, frame*, classcode*);
void func_inst_return(Jvm *, frame*, classcode*);
void func_getstatic(Jvm *, frame*, classcode*);
void func_putstatic(Jvm *, frame*, classcode*);
void func_getfield(Jvm *, frame*, classcode*);
void func_putfield(Jvm *, frame*, classcode*);
void func_invokevirtual(Jvm *, frame*, classcode*);
void func_invokespecial(Jvm *, frame*, classcode*);
void func_invokestatic(Jvm *, frame*, classcode*);
void func_invokeinterface(Jvm *, frame*, classcode*);
void func_invokedynamic(Jvm *, frame*, classcode*);
void func_inst_new(Jvm *, frame*, classcode*);
void func_new(Jvm *, frame*, classcode*);
void func_newarray(Jvm *, frame*, classcode*);
void func_anewarray(Jvm *, frame*, classcode*);
void func_athrow(Jvm *, frame*, classcode*);
void func_arraylength(Jvm *, frame*, classcode*);
void func_checkcast(Jvm *, frame*, classcode*);
void func_instanceof(Jvm *, frame*, classcode*);
void func_monitorenter(Jvm *, frame*, classcode*);
void func_monitorexit(Jvm *, frame*, classcode*);
void func_wide(Jvm *, frame*, classcode*);
void func_multianewarray(Jvm *, frame*, classcode*);
void func_ifnull(Jvm *, frame*, classcode*);
void func_ifnonnull(Jvm *, frame*, classcode*);
void func_goto_w(Jvm *, frame*, classcode*);
void func_jsr_w(Jvm *, frame*, classcode*);


#endif 